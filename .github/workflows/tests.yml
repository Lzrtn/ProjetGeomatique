name: Build and Test with qmake

on:
  push:
    branches: [ "dev" ]
  workflow_dispatch:

jobs:
  # build:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: jurplel/install-qt-action@v3

  #     - name: add repository
  #       run: sudo add-apt-repository ppa:ubuntugis/ppa

  #     - name: update
  #       run: sudo apt update 
        
  #     - name: install gdal
  #       run: sudo apt-get install gdal-bin libgdal-dev libpq-dev
        
  #     - name: Install libpqxx-dev
  #       run: sudo apt-get install libpqxx-dev

             
  #     - name: git clone https://github.com/nlohmann/json.git
  #       run: git clone https://github.com/nlohmann/json.git 

  #     - name: ls
  #       run: ls json/

  #     - name: mkdir json
  #       run: mkdir /home/runner/work/ProjetGeomatique/json

  #     - name: cp git
  #       run: cp -r json/* /home/runner/work/ProjetGeomatique/json
        
  #     - name: cmake /home/runner/work/ProjetGeomatique/json
  #       run: cmake /home/runner/work/ProjetGeomatique/json
        
  #     - name: make
  #       run: make /home/runner/work/ProjetGeomatique/json
        
  #     - name: sudo make install
  #       run: sudo make install /home/runner/work/ProjetGeomatique/json

  #     - name: qmake
  #       run: qmake TiSIG/src/src.pro
        
  #     - name: make
  #       run: make src


  # qtests:
  #   # needs: build
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: jurplel/install-qt-action@v3
  #     - name: Install xvfb
  #       run: sudo apt-get install xvfb
        
  #     - name: qmake
  #       run: qmake interface/qttest/qttest.pro
  #     - name: make
  #       run: make

  #     - name: Run tests with xvfb-run
  #       run: |
  #         xvfb-run -a ./qttest
  #         if [ $? -ne 0 ]; then
  #           echo "Tests failed"
  #           exit 1  # Définit le statut de sortie sur 1 pour indiquer un échec
  #         fi
          
  googletests:
    # needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: jurplel/install-qt-action@v3
     
      - name: install libgtest-dev
        run: sudo apt-get install libgtest-dev
      - name: Install xvfb
        run: sudo apt-get install xvfb
      - name: Install libpqxx-dev
        run: sudo apt-get install libpqxx-dev
      - name: install gdal
        run: sudo apt-get install gdal-bin libgdal-dev libpq-dev

      - name: create src folder
        run: mkdir /home/runner/work/ProjetGeomatique/src

      - name: create data folder
        run: mkdir /home/runner/work/ProjetGeomatique/src/data

      # - name: create Docker folder
      #   run: mkdir /home/runner/work/ProjetGeomatique/src/data/Docker

      - name: copie Docker for build
        run: cp -r TiSIG/src/data/* /home/runner/work/ProjetGeomatique/src/data/
        
      - name: Setup Docker
        run: sudo usermod -a -G docker $USER      

      - name: qmake googletest
        run: qmake TiSIG/googletest/googletest.pro
      - name: make googletest
        run: make googletest

      - name: Run tests with xvfb-run
        run: xvfb-run -a ./googletest || true

      - name: Run tests with xvfb-run
        run: xvfb-run -a ./googletest

      - name: Check test results
        run: |
          if xvfb-run -a ./googletest | grep -q "\[  PASSED  \] [0-9]* tests."; then
            echo "Tests passed"
          else
            echo "Tests failed"
            exit 1
          fi    
 
